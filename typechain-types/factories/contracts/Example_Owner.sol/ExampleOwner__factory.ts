/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ExampleOwner,
  ExampleOwnerInterface,
} from "../../../contracts/Example_Owner.sol/ExampleOwner";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerSet",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "changeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "firstOwner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506102ea806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063893d20e814610046578063a6f9dae114610074578063c4d66de814610089575b600080fd5b6000546201000090046001600160a01b03166040516001600160a01b03909116815260200160405180910390f35b610087610082366004610284565b61009c565b005b610087610097366004610284565b610160565b6000546201000090046001600160a01b031633146100f75760405162461bcd60e51b815260206004820152601360248201527221b0b63632b91034b9903737ba1037bbb732b960691b60448201526064015b60405180910390fd5b600080546040516001600160a01b03808516936201000090930416917f342827c97908e5e2f71151c08502a66d44b6f758e3ac2f1de95f02eb95f0a73591a3600080546001600160a01b03909216620100000262010000600160b01b0319909216919091179055565b600054610100900460ff1661017b5760005460ff161561017f565b303b155b6101e25760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016100ee565b600054610100900460ff16158015610204576000805461ffff19166101011790555b6001600160a01b038216610216573391505b6000805462010000600160b01b031916620100006001600160a01b0385811682029290921780845560405191900490911691907f342827c97908e5e2f71151c08502a66d44b6f758e3ac2f1de95f02eb95f0a735908290a38015610280576000805461ff00191690555b5050565b60006020828403121561029657600080fd5b81356001600160a01b03811681146102ad57600080fd5b939250505056fea2646970667358221220160df88746445b24a2a3e0326e83c292bdfc786d0939fdfca11d58eb6a5cc3b964736f6c634300080d0033";

type ExampleOwnerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExampleOwnerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ExampleOwner__factory extends ContractFactory {
  constructor(...args: ExampleOwnerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ExampleOwner> {
    return super.deploy(overrides || {}) as Promise<ExampleOwner>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ExampleOwner {
    return super.attach(address) as ExampleOwner;
  }
  override connect(signer: Signer): ExampleOwner__factory {
    return super.connect(signer) as ExampleOwner__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExampleOwnerInterface {
    return new utils.Interface(_abi) as ExampleOwnerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ExampleOwner {
    return new Contract(address, _abi, signerOrProvider) as ExampleOwner;
  }
}
